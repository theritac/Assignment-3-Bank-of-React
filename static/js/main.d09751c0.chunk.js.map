{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","balance","updateAccountBalance","newBalance","map","date","slice","amount","description","id","event","parseFloat","Math","round","newCredit","length","toFixed","Date","toISOString","addCredit","reset","required","step","Debits","debits","newDebit","addDebit","App","prevState","debitList","creditList","logInInfo","newUser","currentUser","a","axios","get","cresponse","console","log","data","totalCreditBalance","reduce","total","credit","status","dresponse","totalDebitBalance","debit","newAccountBalance","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d09751c0.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Credits = (props) => {\n  const { credits, balance, updateAccountBalance } = props;\n  // Create the list of Credit items\n  let newBalance = 0;\n\n  const roundToTwoDecimalPlaces = (value) => {\n    return Math.round(value * 100) / 100;\n  }; \n\n  // Create the list of Credit items\n  const submissionCredit = (event) => {\n    event.preventDefault()\n    newBalance = roundToTwoDecimalPlaces(balance + parseFloat(event.target.amount.value));\n    const newCredit = {\n      id: credits.length + 1,\n      description: event.target.description.value,\n      amount: parseFloat(event.target.amount.value).toFixed(2),\n      date: new Date().toISOString()\n    }\n\n    updateAccountBalance(newBalance);\n    props.addCredit(newCredit);\n    event.target.reset()\n  }\n\n  let creditsView = () => {\n    return credits.map((credits) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each credit JSON array element\n      let date = credits.date.slice(0, 10);\n      return <li key={credits.id}>{credits.amount} {credits.description} {date}</li>\n    });\n  }\n// const Credits = (props) => {\n  return (\n    <div>\n      <h1>Credits</h1>\n      {creditsView()}\n      <br/>\n\n      <form onSubmit={submissionCredit}>\n        <input type=\"text\" name=\"description\" required/>\n        <input type=\"number\" step=\"any\" name=\"amount\" required/>\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br />\n      <AccountBalance accountBalance={balance} />\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Credits;\n","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport { Link } from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Debits = (props) => {\n  const { debits, balance, updateAccountBalance } = props;\n  // Create the list of Debit items\n  let newBalance = 0;\n\n  const submissionDebit = (event) => {\n    event.preventDefault()\n    newBalance = (balance - parseFloat(event.target.amount.value)).toFixed(2);\n    const newDebit = {\n      id: debits.length + 1,\n      description: event.target.description.value,\n      amount: parseFloat(event.target.amount.value).toFixed(2),\n      date: new Date().toISOString()\n    }\n\n    updateAccountBalance(newBalance);\n    props.addDebit(newDebit);\n    event.target.reset()\n  }\n\n  let debitsView = () => {\n    return debits.map((debits) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debits.date.slice(0, 10);\n      return <li key={debits.id}>{debits.amount} {debits.description} {date}</li>\n    });\n  }\n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n      {debitsView()}\n      <br/>\n\n      <form onSubmit={submissionDebit}>\n        <input type=\"text\" name=\"description\" required/>\n        <input type=\"number\" step=\"any\" name=\"amount\" required/>\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br />\n      <AccountBalance accountBalance={balance} />\n      <br />\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from 'axios';\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super();\n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  updateAccountBalance = (newBalance) => {\n    this.setState({ accountBalance: newBalance });\n  }\n\n  //adding new debit card into the list\n  addDebit = (newDebit) => {\n    this.setState((prevState) => ({\n      debitList: [...prevState.debitList, newDebit],\n    }));\n  }\n\n  //adding new credit card into the list\n  addCredit = (newCredit) => {\n    this.setState((prevState) => ({\n      creditList: [...prevState.creditList, newCredit],\n    }));\n\n  }\n\n  //API request to get credit and debit info\n  async componentDidMount() {\n    let linkToCreditAPI = 'https://johnnylaicode.github.io/api/credits.json';\n\n    try {  // Accept success response as array of JSON objects (users)\n      let cresponse = await axios.get(linkToCreditAPI);\n      console.log(cresponse);  // Print out response\n      // To get data object in the response, need to use \"response.data\"\n      this.setState({ creditList: cresponse.data });  // Store received data in state's \"users\" object\n      const totalCreditBalance = cresponse.data.reduce((total, credit) => total + credit.amount, 0);\n      this.updateAccountBalance(totalCreditBalance);\n    }\n    catch (error) {  // Print out errors at console when there is an error response\n      if (error.cresponse) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.cresponse.data);  // Print out error message (e.g., Not Found)\n        console.log(error.cresponse.status);  // Print out error status code (e.g., 404)\n      }\n    }\n\n    //link to second API\n    let linkToDeditAPI = 'https://johnnylaicode.github.io/api/debits.json';\n    try {  // Accept success response as array of JSON objects (users)\n      let dresponse = await axios.get(linkToDeditAPI);\n      console.log(dresponse);  // Print out response\n      // To get data object in the response, need to use \"response.data\"\n      this.setState({ debitList: dresponse.data });  // Store received data in state's \"users\" object\n      const totalDebitBalance = dresponse.data.reduce((total, debit) => total + debit.amount, 0);\n\n      // Subtract the total debit from the initial account balance\n      const newAccountBalance = this.state.accountBalance - totalDebitBalance;\n      this.updateAccountBalance(newAccountBalance);\n    }\n    catch (error) {  // Print out errors at console when there is an error response\n      if (error.dresponse) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.dresponse.data);  // Print out error message (e.g., Not Found)\n        console.log(error.dresponse.status);  // Print out error status code (e.g., 404)\n      }\n    }\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {\n    const newUser = { ...this.state.currentUser };\n    newUser.userName = logInInfo.userName;\n    this.setState({ currentUser: newUser })\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} balance={this.state.accountBalance} addCredit={this.addCredit} updateAccountBalance={this.updateAccountBalance} />)\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} balance={this.state.accountBalance} addDebit={this.addDebit} updateAccountBalance={this.updateAccountBalance} />)\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/Assignment-3-Bank-of-React\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent} />\n          <Route exact path=\"/userProfile\" render={UserProfileComponent} />\n          <Route exact path=\"/login\" render={LogInComponent} />\n          <Route exact path=\"/credits\" render={CreditsComponent} />\n          <Route exact path=\"/debits\" render={DebitsComponent} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}